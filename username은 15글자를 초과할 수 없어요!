[ 사용자가 username을 입력할 때, 15자를 초과하지 않도록 글자 수에 제한을 두자 (1) ]

// HTML

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="login.css">
        <title>Momentum App</title>
    </head>
    <body>
        <form id="login-form">
            <input type="text" placeholder="What is your name?" />
            <button>Log In</button>
        </form>
        <script src="login.js"></script>
    </body>
</html>


// JavaScript

const loginForm = document.getElementById("login-form"); // login form 가져오기

const loginForm = loginForm.querySelector("input"); // login form의 input 가져오기
const loginForm = loginForm.querySelector("button"); // login form의 button 가져오기

function onLoginBtnClick(){
  const username = loginInput.value; // 사용자가 입력한 내용을 username에 저장
  if(username === ""){
    alert("please write your name"); // 입력한 내용이 없으면 메세지 창 띄우기
  } else(username.length > 15){
    alert("Your name is too long"); // 입력한 글자의 수가 15자 이상이면 메세지 창 띄우기
  }
}

loginButton.addEventListener("click", onLoginBtnClick);

=====
이렇게 javascript로 구현이 가능하지만, html의 기본 속성을 활용하여 입력 글자 수에 제한을 둘 수도 있다

[ 사용자가 username을 입력할 때, 15자를 초과하지 않도록 글자 수에 제한을 두자 (2) ]

// HTML

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="login.css">
        <title>Momentum App</title>
    </head>
    <body>
        <form id="login-form">
            <input required maxlength="15" type="text" placeholder="What is your name?" /> // required maxlength="15" 추가하여 입력 글자 수 제한
            /*
                + required: 필수 입력 필드를 지정하는 속성
                + maxlength: 글자 수를 지정하는 속성
            */
            <button>Log In</button>
        </form>
        <script src="login.js"></script>
    </body>
</html>

=====
javascript로 구현이 가능하더라도, html 기본 속성을 최대한 활용해 브라우저를 동작시키는 방법이 효율적이다. 완뵥해!
